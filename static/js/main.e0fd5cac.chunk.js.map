{"version":3,"sources":["redux-store/models/auth.js","Components/Movie/index.jsx","Routes/Home/index.jsx","Routes/SingleMovie/index.jsx","Root.jsx","config/index.js","services/auth.js","redux-store/sagas/AuthSagas.js","redux-store/sagas/index.js","redux-store/store.js","App.js","serviceWorker.js","index.js"],"names":["createActions","setAllMovies","getAllMovies","getSingleMovie","setSingleMovie","Creators","Types","reducer","createReducer","allMovies","singleMovie","SET_ALL_MOVIES","state","SET_SINGLE_MOVIE","item","timing","onClick","window","location","hash","show","id","className","style","animationDuration","src","image","medium","alt","name","dangerouslySetInnerHTML","__html","summary","connect","auth","AuthActions","useEffect","length","console","log","map","ind","Movie","key","withRouter","match","useState","JSON","parse","localStorage","getItem","favList","setFav","rerender","setrender","params","isFav","includes","backgroundImage","original","aria-hidden","arr","index","indexOf","splice","setItem","stringify","rating","average","type","language","premiered","schedule","time","days","day","path","exact","render","hasCode","error","status","response","parseInt","instanceAxios","axios","create","baseURL","interceptors","use","message","notification","data","description","errors","Object","values","placement","innerWidth","duration","Promise","reject","handleError","fetchAllMovies","lang","get","catch","fechSingleMovie","call","AuthReq","put","rootSaga","all","takeLatest","AuthGenerators","rootReducer","combineReducers","AuthReducer","store","sagaMiddleware","createSagaMiddleware","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","createStore","runSaga","run","configureStore","App","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e0fd5cac.chunk.js","sourcesContent":["import { createActions, createReducer } from \"reduxsauce\";\r\n\r\nconst { Types, Creators } = createActions({\r\n  setAllMovies: [\"allMovies\"],\r\n  getAllMovies: [\"lang\"],\r\n  //\r\n  getSingleMovie: [\"id\"],\r\n  setSingleMovie: [\"singleMovie\"],\r\n});\r\n\r\nexport const AuthTypes = Types;\r\nexport default Creators;\r\n\r\nconst INITIAL_STATE = {\r\n  allMovies: [],\r\n  singleMovie: {},\r\n};\r\nexport const reducer = createReducer(INITIAL_STATE, {\r\n  SET_ALL_MOVIES: (state, { allMovies }) => ({\r\n    ...state,\r\n    allMovies,\r\n  }),\r\n  SET_SINGLE_MOVIE: (state, { singleMovie }) => ({\r\n    ...state,\r\n    singleMovie,\r\n  }),\r\n});\r\n","import React from \"react\";\r\n\r\nexport default ({ item, timing }) => (\r\n  <div\r\n    onClick={() => {\r\n      window.location.hash = `singleMovie/${item?.show?.id}`;\r\n    }}\r\n    className={`home--movie__item animated fadeIn`}\r\n    style={{ animationDuration: `${timing}s` }}\r\n  >\r\n    <img src={item?.show?.image?.medium} alt=\"\" />\r\n    <div className=\"title\">{item?.show?.name}</div>\r\n    <div className=\"infos\">\r\n      <span dangerouslySetInnerHTML={{ __html: item?.show?.summary }}></span>\r\n    </div>\r\n  </div>\r\n);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { AuthActions } from \"redux-store/models\";\r\nimport Movie from \"Components/Movie\";\r\nconst Home = ({ allMovies, getAllMovies }) => {\r\n  useEffect(() => {\r\n    if (allMovies.length <= 0) getAllMovies(\"US\");\r\n  }, []);\r\n  console.log(\"allMovies\", allMovies);\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"home--nav\">TOP TV SHOWS</div>\r\n      <div className=\"home--movie\">\r\n        {allMovies.map((item, ind) => {\r\n          return (\r\n            <Movie timing={`${ind / 10}`} key={item?.show?.id} item={item} />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default connect(\r\n  ({ auth: { allMovies } }) => ({\r\n    allMovies,\r\n  }),\r\n  AuthActions\r\n)(Home);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { AuthActions } from \"redux-store/models\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst SM = ({ singleMovie, getSingleMovie, match }) => {\r\n  const [favList, setFav] = useState(\r\n    JSON.parse(localStorage.getItem(\"favList\") || \"[]\")\r\n  );\r\n  const [rerender, setrender] = useState(1);\r\n  useEffect(() => {\r\n    const { id } = match.params;\r\n    getSingleMovie(id);\r\n  }, []);\r\n  const isFav = favList.includes(singleMovie.id);\r\n  console.log(\"singleMovie\", singleMovie);\r\n  return (\r\n    <div className=\"singleMovie\">\r\n      <div className=\"singleMovie--left \">\r\n        <div\r\n          className=\"underlay\"\r\n          style={{ backgroundImage: `url(${singleMovie?.image?.original})` }}\r\n        ></div>\r\n        <img\r\n          className={\"animated slideInLeft\"}\r\n          src={singleMovie?.image?.original}\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div className=\"singleMovie--right\">\r\n        <div className=\"options\">\r\n          <span\r\n            onClick={() => {\r\n              window.location.hash = \"/\";\r\n            }}\r\n          >\r\n            <i className=\"fal fa-backward\" aria-hidden=\"true\"></i>\r\n            Go BACK\r\n          </span>\r\n          <span\r\n            onClick={() => {\r\n              var arr = favList;\r\n              if (arr.includes(singleMovie.id)) {\r\n                const index = arr.indexOf(singleMovie.id);\r\n\r\n                arr.splice(index, 1);\r\n\r\n                localStorage.setItem(\"favList\", JSON.stringify(arr));\r\n                setFav(arr);\r\n                setrender(rerender + 1);\r\n              } else {\r\n                localStorage.setItem(\r\n                  \"favList\",\r\n                  JSON.stringify([...favList, singleMovie.id])\r\n                );\r\n                setFav([...favList, singleMovie.id]);\r\n                setrender(rerender + 1);\r\n              }\r\n            }}\r\n            className={isFav ? \"active\" : \"\"}\r\n          >\r\n            <i className=\"fal fa-star\" aria-hidden=\"true\"></i>\r\n            {isFav ? \"Favorited\" : \"Add Favorites\"}\r\n          </span>\r\n        </div>\r\n        <div className=\"title\">{singleMovie.name}</div>\r\n        <div className=\"rating\">Rating : {singleMovie.rating?.average}</div>\r\n        <div className=\"type\">Type : {singleMovie.type}</div>\r\n        <div className=\"lang\">Language : {singleMovie.language}</div>\r\n        <div className=\"prem\">Premiered : {singleMovie.premiered}</div>\r\n        <div className=\"schedule\">schedule : {singleMovie.schedule?.time}</div>\r\n        <div className=\"schedule days\">\r\n          Every :{\" \"}\r\n          {(singleMovie.schedule?.days || []).map((day) => {\r\n            return <span key={day}>{day}</span>;\r\n          })}\r\n        </div>\r\n        <div\r\n          className=\"desc\"\r\n          dangerouslySetInnerHTML={{ __html: singleMovie.summary }}\r\n        ></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default withRouter(\r\n  connect(\r\n    ({ auth: { singleMovie } }) => ({\r\n      singleMovie,\r\n    }),\r\n    AuthActions\r\n  )(SM)\r\n);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\r\nimport * as Routes from \"./Routes\";\r\nimport \"styles/style.css\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nconst Root = () => {\r\n  useEffect(() => {}, []);\r\n  return (\r\n    <>\r\n      <HashRouter>\r\n        <Switch>\r\n          <Route path=\"/\" exact render={() => <Routes.Home />} />\r\n          <Route\r\n            path=\"/singleMovie/:id?/\"\r\n            render={() => <Routes.SingleMovie />}\r\n          />\r\n        </Switch>\r\n      </HashRouter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(null, {})(Root);\r\n","import { notification } from \"antd\";\r\nexport const endpoint = \"https://api.tvmaze.com\";\r\n\r\nconst hasCode = (error, status) => {\r\n  if (\r\n    error?.response?.status === parseInt(status) ||\r\n    error.error?.response?.status === parseInt(status) ||\r\n    error?.response?.status === parseInt(status)\r\n  ) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\nexport const handleError = (error) => {\r\n  // console.log(\"error handler\", error, { error });\r\n  if (hasCode(error, 401)) {\r\n    //loged out\r\n    //window.store.dispatch({ type: \"SET_UNAUTHORIZATION\" });\r\n  } else if (error?.message === \"Network Error\") {\r\n    //network error\r\n  } else if (hasCode(error, 445)) {\r\n    //\r\n  } else if (hasCode(error, 440)) {\r\n    //window.store.dispatch({ type: \"SET_UNAUTHORIZATION\" });\r\n  } else if (hasCode(error, 429)) {\r\n    //\r\n  } else if (hasCode(error, 403)) {\r\n    //\r\n  } else {\r\n    notification[\"error\"]({\r\n      message: error?.response?.data?.message || \"error Message\",\r\n      description:\r\n        (error?.response?.data?.errors &&\r\n          Object.values(error.response.data.errors)) ||\r\n        \"error Desc\",\r\n      placement: window.innerWidth <= 1024 ? \"topRight\" : \"bottomRight\",\r\n      duration: 4,\r\n    });\r\n  }\r\n  return Promise.reject(error);\r\n};\r\n","import axios from \"axios\";\r\nimport { endpoint, handleError } from \"config\";\r\n\r\nexport const instanceAxios = axios.create({\r\n  baseURL: endpoint,\r\n});\r\n\r\n// instanceAxios.interceptors.request.use(\r\n//   async (config) => {\r\n//     console.log(\"req config\", config);\r\n//     var Auth = true;\r\n//     if (config.url.includes(\"/schedule?country=\")) {\r\n//       //api -> without token\r\n//       Auth = false;\r\n//     }\r\n//     const value = await localStorage.getItem(\"token\");\r\n//     const token = JSON.parse(value);\r\n//     config.headers = {\r\n//       ...(Auth ? { Authorization: `Bearer ${token}` } : {}),\r\n//       Accept: \"application/json\",\r\n//       \"Access-Control-Allow-Origin\": \"*\",\r\n//     };\r\n//     return config;\r\n//   },\r\n//   (error) => {\r\n//     Promise.reject(error);\r\n//   }\r\n// );\r\n\r\ninstanceAxios.interceptors.response.use(\r\n  (response) => {\r\n    // console.log(\"response\", response);\r\n    return response;\r\n  },\r\n  (error) => handleError(error)\r\n);\r\n\r\n// export const fetchAllMovies = (lang) => {\r\n//   return fetch(`${endpoint}/schedule?country=${lang}`);\r\n// };\r\n\r\nexport const fetchAllMovies = (lang) => {\r\n  return instanceAxios\r\n    .get(`/schedule?country=${lang}`)\r\n    .catch((error) => ({ error }));\r\n};\r\n\r\nexport const fechSingleMovie = (id) => {\r\n  return instanceAxios.get(`/shows/${id}`).catch((error) => ({ error }));\r\n};\r\n","import { put, call } from \"redux-saga/effects\";\r\nimport AuthActions from \"../models/auth\";\r\n\r\nimport * as AuthReq from \"services/auth\";\r\n\r\nexport function* getAllMovies({ lang }) {\r\n  const response = yield call(AuthReq.fetchAllMovies, lang);\r\n\r\n  if (response) {\r\n    yield put(AuthActions.setAllMovies(response.data));\r\n  }\r\n}\r\n\r\nexport function* getSingleMovie({ id }) {\r\n  const response = yield call(AuthReq.fechSingleMovie, id);\r\n  if (response) {\r\n    yield put(AuthActions.setSingleMovie(response.data));\r\n  }\r\n}\r\n","import { takeLatest, all } from \"redux-saga/effects\";\r\n\r\nimport * as AuthGenerators from \"./AuthSagas\";\r\n// import * as MainGenerators from \"./MainSagas\";\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    // AUTH\r\n    ...[\r\n      takeLatest(\"GET_ALL_MOVIES\", AuthGenerators.getAllMovies),\r\n      takeLatest(\"GET_SINGLE_MOVIE\", AuthGenerators.getSingleMovie),\r\n    ],\r\n\r\n    // MAIN\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport { reducer as AuthReducer } from \"./models/auth\";\r\nimport { reducer as MainReducer } from \"./models/main\";\r\nimport rootSaga from \"./sagas\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: AuthReducer,\r\n  // main: MainReducer,\r\n});\r\n\r\nexport function configureStore() {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  //redux extension logger\r\n  const composeEnhancers =\r\n    typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n      ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n      : compose;\r\n  const enhancer = composeEnhancers(applyMiddleware(sagaMiddleware));\r\n  return {\r\n    ...createStore(rootReducer, enhancer),\r\n    runSaga: sagaMiddleware.run,\r\n  };\r\n}\r\n\r\nexport const store = configureStore();\r\nstore.runSaga(rootSaga);\r\nwindow.store = store;\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport Root from \"./Root\";\r\nimport { store } from \"redux-store/store\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Root />\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}